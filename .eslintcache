[{"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\index.tsx":"1","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\reportWebVitals.ts":"2","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\App.tsx":"3","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\serviceWorker.ts":"4","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\nav\\NavBar.tsx":"5","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\ScrollToTop.tsx":"6","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\Home\\HomePage.tsx":"7","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\Dashboard.tsx":"8","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdItem.tsx":"9","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\adStore.ts":"10","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdList.tsx":"11","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\Loadding.tsx":"12","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\api\\agent.ts":"13","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdForm.tsx":"14","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\NotFound.tsx":"15","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\models\\advertsFixCar\\adverts.ts":"16","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\garages\\GarageDisplay.tsx":"17","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\garages\\GarageList.tsx":"18","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\util\\util.ts":"19","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\DateInput.tsx":"20","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\TextInput.tsx":"21","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\TextAreaInput.tsx":"22","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\rootStore.ts":"23","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\commonStore.ts":"24","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\userStore.ts":"25","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\modalStore.ts":"26","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\user\\LoginForm.tsx":"27","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\ErrorMessage.tsx":"28","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\user\\RegisterForm.tsx":"29","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\modals\\ModalContainer.tsx":"30","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\PrivateRoute.tsx":"31","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\profileStore.ts":"32","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfilePage.tsx":"33","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileDescription.tsx":"34","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileEditForm.tsx":"35","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileHead.tsx":"36","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileContent.tsx":"37","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdItemPlaceholder.tsx":"38","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\Details.tsx":"39","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdDetailedHeader.tsx":"40","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdDetailedInfo.tsx":"41","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileAdverts.tsx":"42","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileHeader.tsx":"43","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdFilters.tsx":"44","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdPhotos.tsx":"45","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\vehicleStore.ts":"46","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\UserVehicles.tsx":"47","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\VehicleForm.tsx":"48","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\models\\profiles\\profile.ts":"49","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\SelectInput.tsx":"50"},{"size":930,"mtime":1612180014488,"results":"51","hashOfConfig":"52"},{"size":425,"mtime":499162500000,"results":"53","hashOfConfig":"52"},{"size":2681,"mtime":1617304813338,"results":"54","hashOfConfig":"52"},{"size":5201,"mtime":1612179184714,"results":"55","hashOfConfig":"52"},{"size":2185,"mtime":1617698849637,"results":"56","hashOfConfig":"52"},{"size":300,"mtime":1612180002879,"results":"57","hashOfConfig":"52"},{"size":4552,"mtime":1616688786772,"results":"58","hashOfConfig":"52"},{"size":1769,"mtime":1617649022335,"results":"59","hashOfConfig":"52"},{"size":1391,"mtime":1617305607099,"results":"60","hashOfConfig":"52"},{"size":5248,"mtime":1616533344720,"results":"61","hashOfConfig":"52"},{"size":713,"mtime":1616439202141,"results":"62","hashOfConfig":"52"},{"size":352,"mtime":1612282818414,"results":"63","hashOfConfig":"52"},{"size":3927,"mtime":1617643957002,"results":"64","hashOfConfig":"52"},{"size":5139,"mtime":1617299477599,"results":"65","hashOfConfig":"52"},{"size":611,"mtime":1615312125380,"results":"66","hashOfConfig":"52"},{"size":1257,"mtime":1617704996028,"results":"67","hashOfConfig":"52"},{"size":530,"mtime":1612467291267,"results":"68","hashOfConfig":"52"},{"size":859,"mtime":1612445448658,"results":"69","hashOfConfig":"52"},{"size":727,"mtime":1615589089321,"results":"70","hashOfConfig":"52"},{"size":996,"mtime":1615208951928,"results":"71","hashOfConfig":"52"},{"size":644,"mtime":1612358682303,"results":"72","hashOfConfig":"52"},{"size":655,"mtime":1612358775455,"results":"73","hashOfConfig":"52"},{"size":925,"mtime":1616593367433,"results":"74","hashOfConfig":"52"},{"size":796,"mtime":1614251786462,"results":"75","hashOfConfig":"52"},{"size":1505,"mtime":1617701662788,"results":"76","hashOfConfig":"52"},{"size":536,"mtime":1614172380991,"results":"77","hashOfConfig":"52"},{"size":1950,"mtime":1614675406514,"results":"78","hashOfConfig":"52"},{"size":720,"mtime":1614174807150,"results":"79","hashOfConfig":"52"},{"size":2426,"mtime":1617698633145,"results":"80","hashOfConfig":"52"},{"size":530,"mtime":1614614342962,"results":"81","hashOfConfig":"52"},{"size":725,"mtime":1614252673970,"results":"82","hashOfConfig":"52"},{"size":2963,"mtime":1617304256381,"results":"83","hashOfConfig":"52"},{"size":1355,"mtime":1617700290673,"results":"84","hashOfConfig":"52"},{"size":1410,"mtime":1616693228097,"results":"85","hashOfConfig":"52"},{"size":2285,"mtime":1617634171902,"results":"86","hashOfConfig":"52"},{"size":983,"mtime":1617700296034,"results":"87","hashOfConfig":"52"},{"size":1667,"mtime":1617701661939,"results":"88","hashOfConfig":"52"},{"size":1121,"mtime":1614712668572,"results":"89","hashOfConfig":"52"},{"size":1085,"mtime":1616594692132,"results":"90","hashOfConfig":"52"},{"size":2714,"mtime":1617704748864,"results":"91","hashOfConfig":"52"},{"size":1737,"mtime":1616533978972,"results":"92","hashOfConfig":"52"},{"size":2840,"mtime":1617701652428,"results":"93","hashOfConfig":"52"},{"size":985,"mtime":1615315878425,"results":"94","hashOfConfig":"52"},{"size":1420,"mtime":1616003914414,"results":"95","hashOfConfig":"52"},{"size":911,"mtime":1616534800565,"results":"96","hashOfConfig":"52"},{"size":2330,"mtime":1617643928421,"results":"97","hashOfConfig":"52"},{"size":6055,"mtime":1617307268615,"results":"98","hashOfConfig":"52"},{"size":5765,"mtime":1617644169201,"results":"99","hashOfConfig":"52"},{"size":1377,"mtime":1617476715319,"results":"100","hashOfConfig":"52"},{"size":813,"mtime":1617696550611,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1ruarw6",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"104"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"104"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"104"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"104"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\index.tsx",[],["222","223"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\reportWebVitals.ts",[],["224","225"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\App.tsx",["226"],"import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport NavBar from \"../../features/nav/NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Container } from \"semantic-ui-react\";\nimport { Route, withRouter, RouteComponentProps, Switch } from \"react-router\";\nimport HomePage from \"../../features/Home/HomePage\";\nimport { ToastContainer } from \"react-toastify\";\nimport Dashboard from \"../../features/adverts/Dashboard\";\nimport AdForm from \"../../features/adverts/AdForm\";\nimport NotFound from \"./NotFound\";\nimport { RootStoreContext } from \"../stores/rootStore\";\nimport LoadingComponent from \"./Loadding\";\nimport 'semantic-ui-css/semantic.min.css';\nimport ModalContainer from \"../Common/modals/ModalContainer\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport Details from \"../../features/adverts/Details\";\nimport UserVehicles from \"../../features/profiles/UserVehicles\";\nimport VehicleForm from \"../../features/profiles/VehicleForm\";\n\nconst App: React.FC<RouteComponentProps> = ({ location }) => {\n  const rootStore = useContext(RootStoreContext);\n  const {setAppLoaded, token, appLoaded} = rootStore.commonStore;\n  const {getUser} = rootStore.userStore;\n\n  useEffect(() => {\n    if (token) {\n      getUser().finally(() => setAppLoaded())\n    } else {\n      setAppLoaded();\n    }\n  }, [getUser, setAppLoaded, token])\n\n  if (!appLoaded)  return <LoadingComponent content='Loading app...' />\n  return (\n    <Fragment>\n       <ModalContainer />\n      <ToastContainer position='bottom-right' />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <Fragment>           \n            <Container>\n            <NavBar />\n              <Switch>\n                <PrivateRoute exact path=\"/adverts\" component={Dashboard} />\n                <PrivateRoute path=\"/adverts/:id\" component={Details} />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createAd\", \"/manage/:id\"]}\n                  component={AdForm}\n                />\n               <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n               <PrivateRoute path='/vehicles/:id' component={UserVehicles} />\n               <PrivateRoute\n                  key={location.key}\n                  path={[\"/createVehicle\", \"/manage/:id\"]}\n                  component={VehicleForm}\n                />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default withRouter(observer(App));\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\serviceWorker.ts",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\nav\\NavBar.tsx",["227","228","229","230","231"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\ScrollToTop.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\Home\\HomePage.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\Dashboard.tsx",["232","233","234"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Advertisement, Grid, Loader } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport AdList from \"./AdList\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport AdItemItemPlaceholder from \"./AdItemPlaceholder\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadAds,\r\n    loadingInitial,\r\n    setPage,\r\n    page,\r\n    totalPages,\r\n  } = rootStore.adStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  const handleGetNext = () => {\r\n    setLoadingNext(true);\r\n    setPage(page + 1);\r\n    loadAds().then(() => setLoadingNext(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAds();\r\n  }, [loadAds]);\r\n  const [size, setSize] = useState('s');\r\n  const style = {\r\n      fontFamily: '\"Nunito Sans\", sans-serif',\r\n      marginTop: '24px',\r\n  };\r\n\r\n \r\n  return (\r\n    <Grid>\r\n        \r\n      <Grid.Column width={12}>\r\n \r\n        {loadingInitial && page === 0 ? (\r\n          <AdItemItemPlaceholder />\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={!loadingNext && page + 1 < totalPages}\r\n            initialLoad={false}\r\n          >\r\n            <AdList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={3}>\r\n        <Advertisement\r\n          unit=\"vertical rectangle\"\r\n          test=\"Advertisement placeholder\"\r\n        />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(Dashboard);\r\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdItem.tsx",["235"],"import React from \"react\";\r\nimport { Item, Button, Segment, Icon, Label } from \"semantic-ui-react\";\r\nimport { format } from \"date-fns\";\r\nimport { IAdvert } from \"../../app/models/advertsFixCar/adverts\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdItem: React.FC<{ ad: IAdvert }> = ({ ad }) => {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/adverts/${ad.id}`}>\r\n                {ad.title}\r\n              </Item.Header>\r\n              <Item.Meta>\r\n                <Icon name=\"car\" /> {ad?.carModel}\r\n              </Item.Meta>\r\n\r\n              {/* <Item.Description>{ad?.description}</Item.Description> */}\r\n              <Button\r\n                as={Link}\r\n                to={`/adverts/${ad.id}`}\r\n                floated=\"left\"\r\n                content=\"More details\"\r\n                color=\"blue\"\r\n              />\r\n            </Item.Content>\r\n            <Item.Image size=\"small\" src=\"/assets/car.jpg\" />\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <Icon name=\"user\" /> {ad?.advertiserUsername}\r\n        {\" | \"}\r\n        <Icon name=\"marker\" /> {ad?.city}\r\n        {\" | \"}\r\n        <Icon name=\"time\" /> {format(ad.date, \"MMMM do, yyyy\")}{\" \"}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default AdItem;\r\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\adStore.ts",["236"],"import { observable, action, computed, runInAction, reaction, toJS } from 'mobx';\r\nimport { createContext, SyntheticEvent } from 'react';\r\nimport agent from '../api/agent';\r\nimport { history } from '../..';\r\nimport { toast } from 'react-toastify';\r\nimport { IAdvert } from '../models/advertsFixCar/adverts';\r\nimport { RootStore } from './rootStore';\r\nimport { setAdProps } from '../Common/util/util';\r\nconst LIMIT = 5;\r\nexport default class AdStore {\r\n\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n  this.rootStore = rootStore;\r\n\r\n  reaction(\r\n    () => this.predicate.keys(),\r\n    () => {\r\n      this.page = 0;\r\n      this.adRegistry.clear();\r\n      this.loadAds();\r\n    }\r\n  )\r\n}\r\n@observable adRegistry = new Map();\r\n@observable ad: IAdvert | null = null;\r\n@observable loadingInitial = false;\r\n@observable submitting = false;\r\n@observable target = '';\r\n@observable loading = false;\r\n@observable adCount = 0;\r\n@observable page = 0;\r\n@observable predicate = new Map();\r\n\r\n@action setPredicate = (predicate: string, value: string | Date) => {\r\n  this.predicate.clear();\r\n  if (predicate !== 'all') {\r\n    this.predicate.set(predicate, value);\r\n  }\r\n}\r\n\r\n// @computed get axiosParams() {\r\n//   const params = new URLSearchParams();\r\n//   params.append('limit', String(LIMIT));\r\n//   params.append('offset', `${this.page ? this.page * LIMIT : 0}`);\r\n//   this.predicate.forEach((value, key) => {\r\n//     if (key === 'startDate') {\r\n//       params.append(key, value.toISOString())\r\n//     } else {\r\n//       params.append(key, value)\r\n//     }\r\n//   })\r\n//   return params;\r\n// }\r\n\r\n@computed get totalPages() {\r\n  return Math.ceil(this.adCount / LIMIT);\r\n}\r\n\r\n@action setPage = (page: number) => {\r\n  this.page = page;\r\n}\r\n\r\n@computed get adsByDate() {\r\n  return this.groupAdsByDate(\r\n    Array.from(this.adRegistry.values())\r\n  );\r\n}\r\ngroupAdsByDate(ads: IAdvert[]) {\r\n  const sortedAds = ads.sort(\r\n    (a, b) => a.date.getTime() - b.date.getTime()\r\n  );\r\n  return Object.entries(\r\n    sortedAds.reduce(\r\n      (ads, ad) => {\r\n        const date = ad.date.toISOString().split('T')[0];\r\n        ads[date] = ads[date]\r\n          ? [...ads[date], ad]\r\n          : [ad];\r\n        return ads;\r\n      },\r\n      {} as { [key: string]: IAdvert[] }\r\n    )\r\n  );\r\n}\r\n\r\n@action loadAds = async () => {\r\n  this.loadingInitial = true;\r\n  try {\r\n    const adsEnvelope = await agent.Adverts.list();\r\n    const {adverts, advertCount} = adsEnvelope;\r\n    runInAction('loading ads', () => {\r\n      adverts.forEach(ad => {\r\n        setAdProps(ad, this.rootStore.userStore.user!);\r\n        this.adRegistry.set(ad.id, ad);\r\n      });\r\n      this.adCount = advertCount;\r\n      this.loadingInitial = false;\r\n    });\r\n  } catch (error) {\r\n    runInAction('load ads error', () => {\r\n      this.loadingInitial = false;\r\n    });\r\n  }\r\n  };\r\n\r\n \r\n  @action loadAd = async (id: string) => {\r\n    let ad = this.getAd(id);\r\n    if (ad) {\r\n      this.ad = ad;\r\n      return toJS(ad);\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        ad = await agent.Adverts.details(id);\r\n        runInAction('getting ad', () => {\r\n          setAdProps(ad, this.rootStore.userStore.user!);\r\n          this.ad = ad;\r\n          this.adRegistry.set(ad.id, ad);\r\n          this.loadingInitial = false;\r\n        });\r\n        return ad;\r\n      } catch (error) {\r\n        runInAction('get ad error', () => {\r\n          this.loadingInitial = false;\r\n        });\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  @action clearAd = () => {\r\n    this.ad= null;\r\n  };\r\n\r\n  getAd = (id: string) => {\r\n    return this.adRegistry.get(id);\r\n  };\r\n\r\n  @action createAd = async (ad: IAdvert) => {\r\n    this.submitting = true;\r\n    try {\r\n      await agent.Adverts.create(ad);\r\n      runInAction('create ad', () => {\r\n        this.adRegistry.set(ad.id, ad);\r\n        this.submitting = false;\r\n      });\r\n      history.push(`/adverts/${ad.id}`);\r\n    } catch (error) {\r\n      runInAction('create ad error', () => {\r\n        this.submitting = false;\r\n      });\r\n      toast.error('Problem submitting data');\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  @action editAd = async (ad: IAdvert) => {\r\n    this.submitting = true;\r\n    try {\r\n      await agent.Adverts.update(ad);\r\n      ad.isAdvertCreator=true;\r\n      runInAction('editing ad', () => {\r\n        this.adRegistry.set(ad.id, ad);\r\n        this.ad = ad;\r\n        this.submitting = false;\r\n      });\r\n      history.push(`/adverts/${ad.id}`);\r\n    } catch (error) {\r\n      runInAction('edit ad error', () => {\r\n        this.submitting = false;\r\n      });\r\n      toast.error('Problem submitting data');\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action deleteAd = async (\r\n    event: SyntheticEvent<HTMLButtonElement>,\r\n    id: string\r\n  ) => {\r\n    this.submitting = true;\r\n    this.target = event.currentTarget.name;\r\n    try {\r\n      await agent.Adverts.delete(id);\r\n      runInAction('deleting ad', () => {\r\n        this.adRegistry.delete(id);\r\n        this.submitting = false;\r\n        this.target = '';\r\n      });\r\n    } catch (error) {\r\n      runInAction('delete ad error', () => {\r\n        this.submitting = false;\r\n        this.target = '';\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n}","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdList.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\Loadding.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\api\\agent.ts",["237","238"],"import axios, { AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { IAdvert, IAdvertsEnvelope } from \"../models/advertsFixCar/adverts\";\r\nimport { IUser, IUserFormValues } from \"../models/users/user\";\r\nimport { IProfile, IUserAdvert, IVehicle, IVehicleFormValues } from \"../models/profiles/profile\";\r\nlet history = createBrowserHistory();\r\n\r\naxios.defaults.baseURL = \"http://localhost:5000/api\";\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(undefined, (error) => {\r\n  if (error.message === \"Network Error\" && !error.response) {\r\n    toast.error(\"Network error - make sure API is running!\");\r\n  }\r\n  const { status, data, config, headers } = error.response;\r\n  if (status === 404) {\r\n    history.push(\"/notfound\");\r\n  }\r\n  if (\r\n    status === 401 &&\r\n    headers[\"www-authenticate\"] ===\r\n      'Bearer error=\"invalid_token\", error_description=\"The token is expired\"'\r\n  ) {\r\n    window.localStorage.removeItem(\"jwt\");\r\n    history.push(\"/\");\r\n    toast.info(\"Your session has expired, please login again\");\r\n  }\r\n  if (\r\n    status === 400 &&\r\n    config.method === \"get\" &&\r\n    data.errors.hasOwnProperty(\"id\")\r\n  ) {\r\n    history.push(\"/notfound\");\r\n  }\r\n  if (status === 500) {\r\n    toast.error(\"Server error - check the terminal for more info!\");\r\n  }\r\n  throw error.response;\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst requests = {\r\n  get: (url: string) => axios.get(url).then(responseBody),\r\n  post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n  put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n  del: (url: string) => axios.delete(url).then(responseBody),\r\n  postForm: (url: string, file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { \"Content-type\": \"multipart/form-data\" },\r\n      })\r\n      .then(responseBody);\r\n  },\r\n};\r\n\r\nconst Adverts = {\r\n  list: (): Promise<IAdvertsEnvelope> => requests.get(\"/adverts\"),\r\n  details: (id: string) => requests.get(`/adverts/${id}`),\r\n  create: (advert: IAdvert) => requests.post(\"/adverts\", advert),\r\n  update: (advert: IAdvert) => requests.put(`/adverts/${advert.id}`, advert),\r\n  delete: (id: string) => requests.del(`/adverts/${id}`),\r\n};\r\n\r\nconst User = {\r\n  current: (): Promise<IUser> => requests.get(\"/user\"),\r\n  login: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(`/user/login`, user),\r\n  register: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(`/user/register`, user),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string): Promise<IProfile> =>\r\n    requests.get(`/profiles/${username}`),\r\n  updateProfile: (profile: Partial<IProfile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  create: (profile: Partial<IProfile>) => requests.post(`/profiles`, profile),\r\n  listAdverts: (username: string, predicate: string) =>\r\n    requests.get(`/profiles/${username}/adverts?predicate=${predicate}`),\r\n  // uploadPhoto: (photo: Blob): Promise<IPhoto> =>\r\n  //   requests.postForm(`/photos`, photo),\r\n  // deletePhoto: (id: string) => requests.del(`/photos/${id}`)\r\n};\r\n\r\nconst Vehicles = {\r\n  getVehicle: (id: string, predicate: string) =>\r\n    requests.get(`/vehicles/${id}/?predicate=${predicate}`),\r\n  create: (vehicle: IVehicleFormValues) => requests.post(\"/vehicles\", vehicle),\r\n  update: (vehicle: IVehicleFormValues) => requests.put(`/vehicles/${vehicle.id}`, vehicle),\r\n  delete: (vehicle: IVehicle) => requests.del(`/vehicles/${vehicle.id}`)\r\n};\r\n\r\nexport default {\r\n  Adverts,\r\n  User,\r\n  Profiles,\r\n  Vehicles\r\n};\r\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdForm.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\NotFound.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\models\\advertsFixCar\\adverts.ts",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\garages\\GarageDisplay.tsx",["239","240","241"],"import React from \"react\";\r\nimport { Grid, Segment, Image, Container, List } from \"semantic-ui-react\";\r\nimport { IGarage } from \"../../app/models/vehicles/garage\";\r\nimport GarageList from \"./GarageList\";\r\n\r\n\r\ninterface IProps {\r\n  garages: IGarage[];\r\n}\r\nconst GarageDisplay: React.FC<IProps> = ({garages}) => {\r\n  return (\r\n    <Container>\r\n      <Grid stackable>\r\n        <Grid.Column>\r\n          <GarageList garages={garages}/>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\nexport default GarageDisplay;\r\n",["242","243"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\garages\\GarageList.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\util\\util.ts",["244"],"import { IAdvert, IAdvertiser } from \"../../models/advertsFixCar/adverts\";\r\nimport { IUser } from \"../../models/users/user\";\r\n\r\nexport const combineDateAndTime = (date: Date,time:Date) => {\r\n    // const timeString = time.getHours() + ':' + time.getMinutes() + ':00';\r\n\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    const dateString = `${year}-${month}-${day}`;\r\n\r\n    // const dateString = date.toISOString().split('T')[0];\r\n    // const timeString = time.toISOString().split('T')[1];\r\n\r\n    return new Date(dateString );\r\n}\r\nexport const setAdProps = (advert: IAdvert, user: IUser) => {\r\n    advert.date = new Date(advert.date);\r\n    return advert;\r\n}\r\n\r\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\DateInput.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\TextInput.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\TextAreaInput.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\rootStore.ts",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\commonStore.ts",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\userStore.ts",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\modalStore.ts",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\user\\LoginForm.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\ErrorMessage.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\user\\RegisterForm.tsx",["245","246","247"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\modals\\ModalContainer.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\PrivateRoute.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\profileStore.ts",["248","249"],"import { RootStore } from './rootStore';\r\nimport { observable, action, runInAction, computed, reaction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { toast } from 'react-toastify';\r\nimport { IPhoto, IProfile, IUserAdvert, IVehicle } from '../models/profiles/profile';\r\n\r\nexport default class ProfileStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable profile: IProfile | null = null;\r\n  @observable loadingProfile = true;\r\n  @observable loadingVehicles = true;\r\n  @observable uploadingPhoto = false;\r\n  @observable loading = false;\r\n  @observable activeTab: number = 0;\r\n  @observable userVehicles: IVehicle[] = [];\r\n  @observable userAdverts: IUserAdvert[] = [];\r\n  @observable loadingAdverts = false;\r\n\r\n  @computed get isCurrentUser() {\r\n    if (this.rootStore.userStore.user && this.profile) {\r\n      return this.rootStore.userStore.user.username === this.profile.username;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  @action loadUserAdverts = async (username: string, predicate?: string) => {\r\n    this.loadingAdverts = true;\r\n    try {\r\n      const adverts = await agent.Profiles.listAdverts(username,predicate!);\r\n      runInAction(() => {\r\n        this.userAdverts = adverts;\r\n        this.loadingAdverts = false;\r\n      })\r\n    } catch (error) {\r\n      toast.error('Problem loading adverts')\r\n      runInAction(() => {\r\n        this.loadingAdverts = false;\r\n      })\r\n    }\r\n  }\r\n  @action setActiveTab = (activeIndex: number) => {\r\n      this.activeTab = activeIndex;\r\n  } \r\n\r\n  @action loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n  @action create = async (profile: Partial<IProfile>) => {\r\n    try {\r\n      await agent.Profiles.create(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.username !== this.rootStore.userStore.user!.username\r\n        ) {\r\n          this.rootStore.userStore.user!.username = profile.username!;\r\n        }\r\n        this.profile = { ...this.profile!, ...profile };\r\n      });\r\n    } catch (error) {\r\n      toast.error('Problem creating profile');\r\n    }\r\n  };\r\n\r\n  @action updateProfile = async (profile: Partial<IProfile>) => {\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.username !== this.rootStore.userStore.user!.username\r\n        ) {\r\n          this.rootStore.userStore.user!.username = profile.username!;\r\n        }\r\n        this.profile = { ...this.profile!, ...profile };\r\n      });\r\n    } catch (error) {\r\n      toast.error('Problem updating profile');\r\n    }\r\n  };\r\n\r\n};","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfilePage.tsx",["250"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileDescription.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileEditForm.tsx",["251"],"import React from 'react';\r\nimport { Form as FinalForm, Field } from 'react-final-form';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { combineValidators, isRequired } from 'revalidate';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport TextInput from '../../app/Common/form/TextInput';\r\nimport TextAreaInput from '../../app/Common/form/TextAreaInput';\r\nimport { IProfile } from '../../app/models/profiles/profile';\r\n\r\n\r\nconst validate = combineValidators({\r\n  //username: isRequired('username')\r\n});\r\n\r\ninterface IProps {\r\n  updateProfile: (profile: Partial<IProfile>) => void;\r\n  profile: IProfile;\r\n}\r\n\r\nconst ProfileEditForm: React.FC<IProps> = ({ updateProfile, profile }) => {\r\n  return (\r\n    <FinalForm\r\n      onSubmit={updateProfile}\r\n      validate={validate}\r\n      initialValues={profile!}\r\n      render={({ handleSubmit, invalid, pristine, submitting }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Field\r\n            name='firstName'\r\n            component={TextInput}\r\n            placeholder='First Name'\r\n            value={profile!.firstName}\r\n          />\r\n          <Field\r\n            name='lastName'\r\n            component={TextInput}\r\n            placeholder='Second Name'\r\n            value={profile!.lastName}\r\n          />\r\n          <Field\r\n            name='street'\r\n            component={TextAreaInput}\r\n            rows={3}\r\n            placeholder='Street'\r\n            value={profile!.street}\r\n          />\r\n          <Field\r\n            name='city'\r\n            component={TextInput}\r\n            placeholder='City'\r\n            value={profile!.city}\r\n          />\r\n          <Field\r\n            name='county'\r\n            component={TextInput}\r\n            placeholder='County'\r\n            value={profile!.county}\r\n          />\r\n          <Field\r\n            name='profileDescription'\r\n            component={TextInput}\r\n            placeholder='Description'\r\n            value={profile!.profileDescription}\r\n          />\r\n          <Button \r\n            loading={submitting}\r\n            floated='right'\r\n            disabled={invalid || pristine}\r\n            positive\r\n            content='Update profile'\r\n          />\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(ProfileEditForm);\r\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileHead.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileContent.tsx",["252","253","254"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdItemPlaceholder.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\Details.tsx",["255"],"import React, { useContext, useEffect } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport LoadingComponent from '../../app/layout/Loadding';\r\nimport AdDetailedInfo from './AdDetailedInfo';\r\nimport AdDetailedHeader from './AdDetailedHeader';\r\n\r\n\r\ninterface DetailParams {\r\n  id: string;\r\n}\r\n\r\nconst AdDetails: React.FC<RouteComponentProps<DetailParams>> = ({\r\n  match,\r\n  history\r\n}) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { ad, loadAd, loadingInitial } = rootStore.adStore;\r\n\r\n  useEffect(() => {\r\n    loadAd(match.params.id);\r\n  }, [loadAd, match.params.id, history]);\r\n\r\n  if (loadingInitial) return <LoadingComponent content='Loading ads...' />;\r\n\r\n  if (!ad) return <h2>Ad not found</h2>;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={12}>\r\n        <AdDetailedHeader ad={ad} />       \r\n      </Grid.Column> \r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(AdDetails);\r\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdDetailedHeader.tsx",["256","257"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdDetailedInfo.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileAdverts.tsx",["258","259","260"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileHeader.tsx",[],["261","262"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdFilters.tsx",["263"],"import React, { Fragment, useContext } from 'react';\r\nimport { Menu, Header } from 'semantic-ui-react';\r\nimport { Calendar } from 'react-widgets';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\nconst AdvertFilters = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { predicate, setPredicate } = rootStore.adStore;\r\n  return (\r\n    <Fragment>\r\n      <Menu vertical size={'large'} style={{ width: '100%', marginTop: 50 }}>\r\n        <Header icon={'filter'} attached color={'blue'} content={'Filters'} />\r\n        <Menu.Item\r\n          active={predicate.size === 0}\r\n          onClick={() => setPredicate('all', 'true')}\r\n          color={'blue'}\r\n          name={'all'}\r\n          content={'All Adverts'}\r\n        />\r\n  \r\n        <Menu.Item\r\n          active={predicate.has('isAdvertCreator')}\r\n          onClick={() => setPredicate('IsAdvertCreator', 'true')}\r\n          color={'blue'}\r\n          name={'advertiser'}\r\n          content={\"My adverts\"}\r\n        />\r\n      </Menu>\r\n      {/* <Header\r\n        icon={'calendar'}\r\n        attached\r\n        color={'blue'}\r\n        content={'Select Date'}\r\n      /> */}\r\n      {/* <Calendar\r\n        onChange={date => setPredicate('startDate', date!)}\r\n        value={predicate.get('startDate') || new Date()}\r\n      /> */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(AdvertFilters);\r\n",["264","265"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdPhotos.tsx",["266","267","268"],"\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Tab, Header, Card, Image, Button, Grid, Divider } from 'semantic-ui-react';\r\n{/* <Item.Image size='small'  src='/assets/car.jpg' /> */}\r\nconst src = '/assets/car.png'\r\nconst AdPhotos = () => {\r\n \r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16} style={{ paddingBottom: 0 }}>\r\n          <Header floated='left' icon='image' size='large' color='teal' content='Photos' />       \r\n        </Grid.Column>       \r\n        </Grid>\r\n        <Divider clearing />\r\n        <Card.Group itemsPerRow={3}>\r\n        <Card raised image={src} />\r\n        <Card raised image={src} />\r\n        <Card raised image={src} />\r\n        <Card raised image={src} />\r\n        <Card raised image={src} />\r\n        <Card raised image={src} />\r\n        </Card.Group> \r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(AdPhotos);","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\vehicleStore.ts",["269","270","271","272"],"import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction, computed, reaction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IProfile, IUserAdvert, IVehicle } from \"../models/profiles/profile\";\r\nimport { IUser } from \"../models/users/user\";\r\nimport { history } from \"../..\";\r\n\r\nexport default class VehicleStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable vehicle: IVehicle | null = null;\r\n  @observable user: IUser | null = null;\r\n  @observable uploadingPhoto = false;\r\n  @observable loading = false;\r\n  @observable activeTab: number = 0;\r\n  @observable userVehicles: IVehicle[] = [];\r\n  @observable loadingVehicles = false;\r\n  @observable submitting = false;\r\n  @observable vehicleRegistry = new Map();\r\n\r\n  @action loadUserVehicles = async (id: string, predicate?: string) => {\r\n    this.loadingVehicles = true;\r\n    try {\r\n      const vehicles = await agent.Vehicles.getVehicle(id, predicate!);\r\n      runInAction(() => {\r\n        this.userVehicles = vehicles;\r\n        this.loadingVehicles = false;\r\n        console.log(vehicles);\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingVehicles = false;\r\n        toast.error(\"Problem loading vehicle data\");\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action createVehicle = async (vehicle: IVehicle) => {\r\n    this.submitting = true;\r\n    const user = await agent.User.current();\r\n    try {\r\n      await agent.Vehicles.create(vehicle);\r\n      runInAction(() => {\r\n        this.vehicle = vehicle;\r\n        this.submitting = false;\r\n      });\r\n      history.push(`/vehicles/${user.username}`);\r\n    } catch (error) {\r\n      toast.error(\"Problem creating vehicle\");\r\n      this.submitting = false;\r\n    }\r\n  };\r\n \r\n  @action editVehicle = async (vehicle: IVehicle) => {\r\n    this.submitting = true;\r\n    const user = await agent.User.current();\r\n    try {\r\n      await agent.Vehicles.update(vehicle);\r\n      runInAction(() => {\r\n        this.vehicle = vehicle;\r\n        this.submitting = false;\r\n      });\r\n      history.push(`/vehicles/${user.username}`);\r\n    } catch (error) {\r\n      toast.error(\"Problem editing vehicle data\");\r\n      this.submitting = false;\r\n    }\r\n  };\r\n}\r\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\UserVehicles.tsx",["273","274","275","276","277","278"],"import React, { useEffect, useContext, Fragment } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport {\r\n  Tab,\r\n  Grid,\r\n  Header,\r\n  Card,\r\n  Image,\r\n  TabProps,\r\n  Button,\r\n  Divider,\r\n  Icon,\r\n  Item,\r\n  Label,\r\n  Table,\r\n} from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport { IVehicle } from \"../../app/models/profiles/profile\";\r\nimport { Link, RouteComponentProps } from \"react-router-dom\";\r\nimport VehicleForm from \"./VehicleForm\";\r\nconst src = \"/assets/car.png\";\r\ninterface RouteParams {\r\n  id: string;\r\n}\r\n\r\ninterface IProps extends RouteComponentProps<RouteParams> {}\r\n// const panes = [{ menuItem: \"Vehicles\", pane: { key: \"vehicles\" } }];\r\n\r\nconst UserVehicle: React.FC<IProps> = ({ match }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadUserVehicles,\r\n    vehicle,\r\n    loadingVehicles,\r\n    userVehicles,\r\n  } = rootStore.vehicleStore;\r\n\r\n  useEffect(() => {\r\n    loadUserVehicles(match.params.id);\r\n  }, [loadUserVehicles, vehicle]);\r\n\r\n  const handleTabChange = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    data: TabProps\r\n  ) => {\r\n    let predicate;\r\n    switch (data.activeIndex) {\r\n      case 1:\r\n        predicate = \"vehicles\";\r\n        break;\r\n      default:\r\n        predicate = \"vehicles\";\r\n        break;\r\n    }\r\n    loadUserVehicles(match.params.id, predicate);\r\n  };\r\n  interface IProps extends RouteComponentProps<RouteParams> {}\r\n  const panes = [{ menuItem: \"My car\", pane: { key: \"vehicles\" } }];\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingVehicles}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Divider horizontal>\r\n            <Header>\r\n              <Icon name=\"car\" />\r\n              Vehicles\r\n            </Header>\r\n          </Divider>\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n\r\n          <Card.Group>\r\n            {userVehicles !== null ? (\r\n              <Button\r\n                as={Link}\r\n                to={`/createVehicle`}\r\n                color=\"green\"\r\n                floated=\"right\"\r\n              >\r\n                Ad car details\r\n              </Button>\r\n            ) : userVehicles ? (\r\n              <Button>Send private message</Button>\r\n            ) : (\r\n              <Header centered>Contact provided only for verified users</Header>\r\n            )}\r\n\r\n            {userVehicles.map((vehicle: IVehicle) => (\r\n              <Card fluid color=\"green\">\r\n                <Item.Content>\r\n                  <Item.Header as=\"a\">\r\n                    {vehicle.carMake} {vehicle.carModel}{\" \"}\r\n                  </Item.Header>\r\n                  <Item.Meta>\r\n                    <span className=\"cinema\">{vehicle.registrationYear}</span>\r\n                  </Item.Meta>\r\n\r\n                  <Table celled compact definition>\r\n                    <Table.Body>\r\n                      <Table.Row>\r\n                        <Table.Cell>Registration Number</Table.Cell>\r\n                        <Table.Cell>{vehicle.registrationNumber}</Table.Cell>\r\n                      </Table.Row>\r\n\r\n                      <Table.Row>\r\n                        <Table.Cell>Transmission</Table.Cell>\r\n                        <Table.Cell>{vehicle.transmission}</Table.Cell>\r\n                      </Table.Row>\r\n\r\n                      <Table.Row>\r\n                        <Table.Cell>Body Style</Table.Cell>\r\n                        <Table.Cell>{vehicle.bodyStyle}</Table.Cell>\r\n                      </Table.Row>\r\n\r\n                      <Table.Row>\r\n                        <Table.Cell>Fuel Type</Table.Cell>\r\n                        <Table.Cell>{vehicle.fuelType}</Table.Cell>\r\n                      </Table.Row>\r\n\r\n                      <Table.Row>\r\n                        <Table.Cell>Number of seats</Table.Cell>\r\n                        <Table.Cell>{vehicle.numberOfSeats}</Table.Cell>\r\n                      </Table.Row>\r\n\r\n                      <Table.Row>\r\n                        <Table.Cell>Number of doors</Table.Cell>\r\n                        <Table.Cell>{vehicle.numberOfDoors}</Table.Cell>\r\n                      </Table.Row>\r\n\r\n                      <Table.Row>\r\n                        <Table.Cell>Body Style</Table.Cell>\r\n                        <Table.Cell>{vehicle.bodyStyle}</Table.Cell>\r\n                      </Table.Row>\r\n\r\n                      <Table.Row>\r\n                        <Table.Cell>Engine Size</Table.Cell>\r\n                        <Table.Cell>{vehicle.engineSize}</Table.Cell>\r\n                      </Table.Row>\r\n\r\n                      <Table.Row>\r\n                        <Table.Cell>Vin number</Table.Cell>\r\n                        <Table.Cell>{vehicle.vin}</Table.Cell>\r\n                      </Table.Row>\r\n\r\n                      <Table.Row>\r\n                        <Table.Cell>Car services details</Table.Cell>\r\n                        <Table.Cell></Table.Cell>\r\n                      </Table.Row>\r\n                    </Table.Body>\r\n\r\n                    <Table.Footer fullWidth>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell colSpan=\"4\">\r\n                          <Button floated=\"right\" color=\"green\">\r\n                            Edit details\r\n                          </Button>\r\n                        </Table.HeaderCell>\r\n                      </Table.Row>\r\n                    </Table.Footer>\r\n                  </Table>\r\n\r\n                  <Divider clearing />\r\n                  <Card.Group itemsPerRow={3}>\r\n                    <Card raised image={src} />\r\n                    <Card raised image={src} />\r\n                    <Card raised image={src} />\r\n                  </Card.Group>\r\n                </Item.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(UserVehicle);\r\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\VehicleForm.tsx",["279","280","281","282","283","284"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Segment, Form, Button, Grid } from \"semantic-ui-react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\n\r\nimport {\r\n  combineValidators,\r\n  isRequired,\r\n  composeValidators,\r\n  hasLengthGreaterThan,\r\n} from \"revalidate\";\r\nimport TextInput from \"../../app/Common/form/TextInput\";\r\nimport TextAreaInput from \"../../app/Common/form/TextAreaInput\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\n\r\nimport { configure } from \"mobx\";\r\nconfigure({\r\n  enforceActions: \"never\",\r\n})\r\nconst validate = combineValidators({\r\n  //   registration: isRequired({ message: 'car registration is required' }),\r\n  carModel: isRequired(\"Car model\"),\r\n  //   description: composeValidators(\r\n  //     isRequired('Description'),\r\n  //     hasLengthGreaterThan(4)({\r\n  //       message: 'Description needs to be at least 5 characters'\r\n  //     })\r\n  //   )(),\r\n  carMake: isRequired(\"car Make\"),\r\n  vin: isRequired('Vin is required'),\r\n  //time: isRequired('Time')\r\n  // advertiserName\r\n  // email\r\n  // phoneNumber\r\n});\r\n\r\n// interface DetailParams {\r\n//   id: string;\r\n// }\r\n\r\nconst VehicleForm = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    createVehicle,\r\n    editVehicle,\r\n    submitting,\r\n    vehicle\r\n  } = rootStore.vehicleStore;\r\n\r\n  const handleFinalFormSubmit = (values: any) => { \r\n    if (!values.id) {      \r\n      createVehicle(values);\r\n    } else {\r\n      editVehicle(values);\r\n    }\r\n  };\r\n  return (\r\n    <Grid>\r\n      <Grid.Column>\r\n        <Segment clearing>\r\n          <FinalForm\r\n          initialValues={vehicle}  \r\n            validate={validate}\r\n                     \r\n            onSubmit={handleFinalFormSubmit}\r\n            render={({ handleSubmit, invalid, pristine }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <Field\r\n                  name=\"registrationNumber\"\r\n                  placeholder=\"Registration Number\"\r\n                  value={vehicle?.registrationNumber}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"description\"\r\n                  placeholder=\"Car Description\"\r\n                  value={vehicle?.description}\r\n                  component={TextAreaInput}\r\n                />\r\n                <Field\r\n                  name=\"registrationYear\"\r\n                  placeholder=\"Registration Year\"\r\n                  value={vehicle?.registrationYear}\r\n                  component={TextInput}\r\n                />\r\n\r\n                <Field\r\n                  name=\"carMake\"\r\n                  placeholder=\"Car Make\"\r\n                  value={vehicle?.carMake}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"carModel\"\r\n                  placeholder=\"CarModel\"\r\n                  value={vehicle?.carModel}\r\n                  rows={3}\r\n                  component={TextInput}\r\n                />\r\n\r\n                <Field\r\n                  name=\"bodyStyle\"\r\n                  placeholder=\"Body Style\"\r\n                  value={vehicle?.bodyStyle}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"transmission\"\r\n                  placeholder=\"Transmission\"\r\n                  value={vehicle?.transmission}\r\n                  rows={3}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"fuelType\"\r\n                  placeholder=\"Fuel Type\"\r\n                  value={vehicle?.fuelType}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"numberOfSeats\"\r\n                  placeholder=\"Number Of Seats\"\r\n                  value={vehicle?.numberOfSeats}\r\n                  component={TextInput}\r\n                />\r\n\r\n                <Field\r\n                  name=\"numberOfDoors\"\r\n                  placeholder=\"Number Of Doors\"\r\n                  value={vehicle?.numberOfDoors}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"engineSize\"\r\n                  placeholder=\"Engine Size\"\r\n                  value={vehicle?.engineSize}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"vin\"\r\n                  placeholder=\"Vin number\"\r\n                  value={vehicle?.vin}\r\n                  rows={3}\r\n                  component={TextInput}\r\n                />\r\n                {/* <Field\r\n                  name=\"nctResults\"\r\n                  placeholder=\"NCT Results\"\r\n                  value={vehicle?.nctResults}\r\n                  component={TextInput}\r\n                /> */}\r\n                <Button\r\n                  loading={submitting}\r\n                  disabled={invalid || pristine}\r\n                  floated=\"right\"\r\n                  positive\r\n                  type=\"submit\"\r\n                  content=\"Submit\"\r\n                \r\n                />\r\n                {/* <Button\r\n                  onClick={\r\n                    vehicle.id\r\n                      ? () => history.push(`/vehicles/${vehicle.id}`)\r\n                      : () => history.push(\"/vehicles\")\r\n                  }\r\n                  disabled={loading}\r\n                  floated=\"right\"\r\n                  type=\"button\"\r\n                  content=\"Cancel\"\r\n                /> */}\r\n              </Form>\r\n            )}\r\n          />\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(VehicleForm);\r\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\models\\profiles\\profile.ts",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\SelectInput.tsx",[],{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","replacedBy":"288"},{"ruleId":"285","replacedBy":"289"},{"ruleId":"287","replacedBy":"290"},{"ruleId":"291","severity":1,"message":"292","line":1,"column":50,"nodeType":"293","messageId":"294","endLine":1,"endColumn":58},{"ruleId":"291","severity":1,"message":"295","line":8,"column":3,"nodeType":"293","messageId":"294","endLine":8,"endColumn":9},{"ruleId":"291","severity":1,"message":"296","line":10,"column":3,"nodeType":"293","messageId":"294","endLine":10,"endColumn":11},{"ruleId":"291","severity":1,"message":"297","line":11,"column":3,"nodeType":"293","messageId":"294","endLine":11,"endColumn":10},{"ruleId":"298","severity":1,"message":"299","line":29,"column":27,"nodeType":"300","messageId":"301","endLine":29,"endColumn":29},{"ruleId":"298","severity":1,"message":"299","line":53,"column":35,"nodeType":"300","messageId":"301","endLine":53,"endColumn":37},{"ruleId":"291","severity":1,"message":"302","line":29,"column":10,"nodeType":"293","messageId":"294","endLine":29,"endColumn":14},{"ruleId":"291","severity":1,"message":"303","line":29,"column":16,"nodeType":"293","messageId":"294","endLine":29,"endColumn":23},{"ruleId":"291","severity":1,"message":"304","line":30,"column":9,"nodeType":"293","messageId":"294","endLine":30,"endColumn":14},{"ruleId":"291","severity":1,"message":"305","line":2,"column":39,"nodeType":"293","messageId":"294","endLine":2,"endColumn":44},{"ruleId":"291","severity":1,"message":"306","line":2,"column":10,"nodeType":"293","messageId":"294","endLine":2,"endColumn":23},{"ruleId":"291","severity":1,"message":"307","line":6,"column":20,"nodeType":"293","messageId":"294","endLine":6,"endColumn":31},{"ruleId":"308","severity":1,"message":"309","line":107,"column":1,"nodeType":"310","endLine":112,"endColumn":3},{"ruleId":"291","severity":1,"message":"297","line":2,"column":16,"nodeType":"293","messageId":"294","endLine":2,"endColumn":23},{"ruleId":"291","severity":1,"message":"311","line":2,"column":25,"nodeType":"293","messageId":"294","endLine":2,"endColumn":30},{"ruleId":"291","severity":1,"message":"312","line":2,"column":43,"nodeType":"293","messageId":"294","endLine":2,"endColumn":47},{"ruleId":"285","replacedBy":"313"},{"ruleId":"287","replacedBy":"314"},{"ruleId":"291","severity":1,"message":"315","line":1,"column":19,"nodeType":"293","messageId":"294","endLine":1,"endColumn":30},{"ruleId":"291","severity":1,"message":"316","line":3,"column":32,"nodeType":"293","messageId":"294","endLine":3,"endColumn":37},{"ruleId":"291","severity":1,"message":"317","line":24,"column":10,"nodeType":"293","messageId":"294","endLine":24,"endColumn":16},{"ruleId":"291","severity":1,"message":"318","line":24,"column":18,"nodeType":"293","messageId":"294","endLine":24,"endColumn":27},{"ruleId":"291","severity":1,"message":"319","line":2,"column":53,"nodeType":"293","messageId":"294","endLine":2,"endColumn":61},{"ruleId":"291","severity":1,"message":"320","line":5,"column":10,"nodeType":"293","messageId":"294","endLine":5,"endColumn":16},{"ruleId":"291","severity":1,"message":"321","line":8,"column":8,"nodeType":"293","messageId":"294","endLine":8,"endColumn":21},{"ruleId":"291","severity":1,"message":"322","line":4,"column":29,"nodeType":"293","messageId":"294","endLine":4,"endColumn":39},{"ruleId":"291","severity":1,"message":"323","line":1,"column":17,"nodeType":"293","messageId":"294","endLine":1,"endColumn":27},{"ruleId":"291","severity":1,"message":"324","line":5,"column":10,"nodeType":"293","messageId":"294","endLine":5,"endColumn":26},{"ruleId":"298","severity":1,"message":"299","line":31,"column":28,"nodeType":"300","messageId":"301","endLine":31,"endColumn":30},{"ruleId":"291","severity":1,"message":"325","line":7,"column":8,"nodeType":"293","messageId":"294","endLine":7,"endColumn":22},{"ruleId":"291","severity":1,"message":"311","line":2,"column":41,"nodeType":"293","messageId":"294","endLine":2,"endColumn":46},{"ruleId":"291","severity":1,"message":"326","line":26,"column":11,"nodeType":"293","messageId":"294","endLine":26,"endColumn":18},{"ruleId":"291","severity":1,"message":"311","line":8,"column":3,"nodeType":"293","messageId":"294","endLine":8,"endColumn":8},{"ruleId":"291","severity":1,"message":"327","line":10,"column":3,"nodeType":"293","messageId":"294","endLine":10,"endColumn":9},{"ruleId":"298","severity":1,"message":"299","line":69,"column":35,"nodeType":"300","messageId":"301","endLine":69,"endColumn":37},{"ruleId":"285","replacedBy":"328"},{"ruleId":"287","replacedBy":"329"},{"ruleId":"291","severity":1,"message":"330","line":3,"column":10,"nodeType":"293","messageId":"294","endLine":3,"endColumn":18},{"ruleId":"285","replacedBy":"331"},{"ruleId":"287","replacedBy":"332"},{"ruleId":"291","severity":1,"message":"311","line":4,"column":29,"nodeType":"293","messageId":"294","endLine":4,"endColumn":34},{"ruleId":"291","severity":1,"message":"327","line":4,"column":36,"nodeType":"293","messageId":"294","endLine":4,"endColumn":42},{"ruleId":"333","severity":1,"message":"334","line":5,"column":1,"nodeType":"335","messageId":"336","endLine":5,"endColumn":59},{"ruleId":"291","severity":1,"message":"337","line":2,"column":43,"nodeType":"293","messageId":"294","endLine":2,"endColumn":51},{"ruleId":"291","severity":1,"message":"319","line":2,"column":53,"nodeType":"293","messageId":"294","endLine":2,"endColumn":61},{"ruleId":"291","severity":1,"message":"338","line":5,"column":10,"nodeType":"293","messageId":"294","endLine":5,"endColumn":18},{"ruleId":"291","severity":1,"message":"307","line":5,"column":20,"nodeType":"293","messageId":"294","endLine":5,"endColumn":31},{"ruleId":"291","severity":1,"message":"339","line":1,"column":40,"nodeType":"293","messageId":"294","endLine":1,"endColumn":48},{"ruleId":"291","severity":1,"message":"311","line":8,"column":3,"nodeType":"293","messageId":"294","endLine":8,"endColumn":8},{"ruleId":"291","severity":1,"message":"305","line":14,"column":3,"nodeType":"293","messageId":"294","endLine":14,"endColumn":8},{"ruleId":"291","severity":1,"message":"340","line":20,"column":8,"nodeType":"293","messageId":"294","endLine":20,"endColumn":19},{"ruleId":"341","severity":1,"message":"342","line":40,"column":6,"nodeType":"343","endLine":40,"endColumn":33,"suggestions":"344"},{"ruleId":"291","severity":1,"message":"345","line":57,"column":13,"nodeType":"293","messageId":"294","endLine":57,"endColumn":19},{"ruleId":"291","severity":1,"message":"292","line":1,"column":17,"nodeType":"293","messageId":"294","endLine":1,"endColumn":25},{"ruleId":"291","severity":1,"message":"346","line":1,"column":39,"nodeType":"293","messageId":"294","endLine":1,"endColumn":48},{"ruleId":"291","severity":1,"message":"347","line":3,"column":16,"nodeType":"293","messageId":"294","endLine":3,"endColumn":20},{"ruleId":"291","severity":1,"message":"348","line":5,"column":10,"nodeType":"293","messageId":"294","endLine":5,"endColumn":29},{"ruleId":"291","severity":1,"message":"349","line":11,"column":3,"nodeType":"293","messageId":"294","endLine":11,"endColumn":20},{"ruleId":"291","severity":1,"message":"350","line":12,"column":3,"nodeType":"293","messageId":"294","endLine":12,"endColumn":23},"no-native-reassign",["351"],"no-negated-in-lhs",["352"],["351"],["352"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'MenuItem' is defined but never used.","'Segment' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'size' is assigned a value but never used.","'setSize' is assigned a value but never used.","'style' is assigned a value but never used.","'Label' is defined but never used.","'createContext' is defined but never used.","'IUserAdvert' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Image' is defined but never used.","'List' is defined but never used.",["351"],["352"],"'IAdvertiser' is defined but never used.","'Radio' is defined but never used.","'garage' is assigned a value but never used.","'setGarage' is assigned a value but never used.","'reaction' is defined but never used.","'IPhoto' is defined but never used.","'ProfileHeader' is defined but never used.","'isRequired' is defined but never used.","'useContext' is defined but never used.","'RootStoreContext' is defined but never used.","'AdDetailedInfo' is defined but never used.","'loading' is assigned a value but never used.","'Button' is defined but never used.",["351"],["352"],"'Calendar' is defined but never used.",["351"],["352"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'computed' is defined but never used.","'IProfile' is defined but never used.","'Fragment' is defined but never used.","'VehicleForm' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["353"],"'IProps' is defined but never used.","'useEffect' is defined but never used.","'uuid' is defined but never used.","'RouteComponentProps' is defined but never used.","'composeValidators' is defined but never used.","'hasLengthGreaterThan' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"354","fix":"355"},"Update the dependencies array to be: [loadUserVehicles, match.params.id, vehicle]",{"range":"356","text":"357"},[1011,1038],"[loadUserVehicles, match.params.id, vehicle]"]