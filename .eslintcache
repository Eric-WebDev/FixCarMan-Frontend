[{"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\index.tsx":"1","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\reportWebVitals.ts":"2","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\App.tsx":"3","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\serviceWorker.ts":"4","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\nav\\NavBar.tsx":"5","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\ScrollToTop.tsx":"6","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\Home\\HomePage.tsx":"7","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\Dashboard.tsx":"8","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdItem.tsx":"9","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\adStore.ts":"10","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdList.tsx":"11","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\Loadding.tsx":"12","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\api\\agent.ts":"13","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdForm.tsx":"14","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\NotFound.tsx":"15","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\models\\advertsFixCar\\adverts.ts":"16","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\garages\\GarageDisplay.tsx":"17","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\garages\\GarageList.tsx":"18","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\util\\util.ts":"19","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\DateInput.tsx":"20","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\TextInput.tsx":"21","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\TextAreaInput.tsx":"22","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\rootStore.ts":"23","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\commonStore.ts":"24","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\userStore.ts":"25","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\modalStore.ts":"26","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\user\\LoginForm.tsx":"27","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\ErrorMessage.tsx":"28","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\user\\RegisterForm.tsx":"29","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\modals\\ModalContainer.tsx":"30","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\PrivateRoute.tsx":"31","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\profileStore.ts":"32","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfilePage.tsx":"33","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileDescription.tsx":"34","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileEditForm.tsx":"35","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileHead.tsx":"36","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileContent.tsx":"37","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdItemPlaceholder.tsx":"38","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\Details.tsx":"39","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdDetailedHeader.tsx":"40","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdDetailedInfo.tsx":"41","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileAdverts.tsx":"42","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileHeader.tsx":"43","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdFilters.tsx":"44"},{"size":930,"mtime":1612180014488,"results":"45","hashOfConfig":"46"},{"size":425,"mtime":499162500000,"results":"47","hashOfConfig":"46"},{"size":2289,"mtime":1616001585025,"results":"48","hashOfConfig":"46"},{"size":5201,"mtime":1612179184714,"results":"49","hashOfConfig":"46"},{"size":1809,"mtime":1616001359856,"results":"50","hashOfConfig":"46"},{"size":300,"mtime":1612180002879,"results":"51","hashOfConfig":"46"},{"size":4552,"mtime":1615314776102,"results":"52","hashOfConfig":"46"},{"size":1448,"mtime":1616439593086,"results":"53","hashOfConfig":"46"},{"size":1404,"mtime":1616533095412,"results":"54","hashOfConfig":"46"},{"size":5293,"mtime":1616533095410,"results":"55","hashOfConfig":"46"},{"size":713,"mtime":1616439202141,"results":"56","hashOfConfig":"46"},{"size":352,"mtime":1612282818414,"results":"57","hashOfConfig":"46"},{"size":3553,"mtime":1616438419487,"results":"58","hashOfConfig":"46"},{"size":5155,"mtime":1616527880545,"results":"59","hashOfConfig":"46"},{"size":611,"mtime":1615312125380,"results":"60","hashOfConfig":"46"},{"size":1235,"mtime":1616437268367,"results":"61","hashOfConfig":"46"},{"size":530,"mtime":1612467291267,"results":"62","hashOfConfig":"46"},{"size":859,"mtime":1612445448658,"results":"63","hashOfConfig":"46"},{"size":727,"mtime":1615589089321,"results":"64","hashOfConfig":"46"},{"size":996,"mtime":1615208951928,"results":"65","hashOfConfig":"46"},{"size":644,"mtime":1612358682303,"results":"66","hashOfConfig":"46"},{"size":655,"mtime":1612358775455,"results":"67","hashOfConfig":"46"},{"size":799,"mtime":1616001659411,"results":"68","hashOfConfig":"46"},{"size":796,"mtime":1614251786462,"results":"69","hashOfConfig":"46"},{"size":1474,"mtime":1615313766922,"results":"70","hashOfConfig":"46"},{"size":536,"mtime":1614172380991,"results":"71","hashOfConfig":"46"},{"size":1950,"mtime":1614675406514,"results":"72","hashOfConfig":"46"},{"size":720,"mtime":1614174807150,"results":"73","hashOfConfig":"46"},{"size":2036,"mtime":1614675444728,"results":"74","hashOfConfig":"46"},{"size":530,"mtime":1614614342962,"results":"75","hashOfConfig":"46"},{"size":725,"mtime":1614252673970,"results":"76","hashOfConfig":"46"},{"size":2866,"mtime":1616001660855,"results":"77","hashOfConfig":"46"},{"size":1336,"mtime":1615639692350,"results":"78","hashOfConfig":"46"},{"size":1360,"mtime":1614703122502,"results":"79","hashOfConfig":"46"},{"size":2285,"mtime":1615983155809,"results":"80","hashOfConfig":"46"},{"size":983,"mtime":1615315788545,"results":"81","hashOfConfig":"46"},{"size":858,"mtime":1616532792036,"results":"82","hashOfConfig":"46"},{"size":1121,"mtime":1614712668572,"results":"83","hashOfConfig":"46"},{"size":1091,"mtime":1616532132122,"results":"84","hashOfConfig":"46"},{"size":2374,"mtime":1616532095727,"results":"85","hashOfConfig":"46"},{"size":1684,"mtime":1616532466959,"results":"86","hashOfConfig":"46"},{"size":2546,"mtime":1615983504254,"results":"87","hashOfConfig":"46"},{"size":985,"mtime":1615315878425,"results":"88","hashOfConfig":"46"},{"size":1420,"mtime":1616003914414,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1ruarw6",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"193"},"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\index.tsx",[],["194","195"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\reportWebVitals.ts",[],["196","197"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\App.tsx",["198"],"import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport NavBar from \"../../features/nav/NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Container } from \"semantic-ui-react\";\nimport { Route, withRouter, RouteComponentProps, Switch } from \"react-router\";\nimport HomePage from \"../../features/Home/HomePage\";\nimport { ToastContainer } from \"react-toastify\";\nimport Dashboard from \"../../features/adverts/Dashboard\";\nimport AdForm from \"../../features/adverts/AdForm\";\nimport NotFound from \"./NotFound\";\nimport { RootStoreContext } from \"../stores/rootStore\";\nimport LoadingComponent from \"./Loadding\";\nimport 'semantic-ui-css/semantic.min.css';\nimport ModalContainer from \"../Common/modals/ModalContainer\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport Details from \"../../features/adverts/Details\";\n\nconst App: React.FC<RouteComponentProps> = ({ location }) => {\n  const rootStore = useContext(RootStoreContext);\n  const {setAppLoaded, token, appLoaded} = rootStore.commonStore;\n  const {getUser} = rootStore.userStore;\n\n  useEffect(() => {\n    if (token) {\n      getUser().finally(() => setAppLoaded())\n    } else {\n      setAppLoaded();\n    }\n  }, [getUser, setAppLoaded, token])\n\n  if (!appLoaded)  return <LoadingComponent content='Loading app...' />\n  return (\n    <Fragment>\n       <ModalContainer />\n      <ToastContainer position='bottom-right' />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <Fragment>           \n            <Container>\n            <NavBar />\n              <Switch>\n                <PrivateRoute exact path=\"/adverts\" component={Dashboard} />\n                <PrivateRoute path=\"/adverts/:id\" component={Details} />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createAd\", \"/manage/:id\"]}\n                  component={AdForm}\n                />\n               <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default withRouter(observer(App));\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\serviceWorker.ts",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\nav\\NavBar.tsx",["199","200","201"],"import { observer } from \"mobx-react-lite\";\r\nimport React, { useContext } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Header, Menu, MenuItem, Segment } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\n\r\n const NavBar:React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { user, logout, } = rootStore.userStore;\r\n  \r\n  return (\r\n    <Menu stackable pointing size=\"large\"  >\r\n    <Container>\r\n     \r\n        <Menu.Item>\r\n          <img src='/assets/logoFMC.jpg' alt=\"Logo\"/>\r\n          FixCarMan\r\n        </Menu.Item>\r\n        {user && (<Menu.Item name=\"home\" as={NavLink} exact to='/'/>)}\r\n        {user && (<Menu.Item name=\"garages\" as={NavLink} to='/garages'/>)}\r\n        {user && (<Menu.Item name=\"Search Ad\" as={NavLink} to='/adverts'/>)}\r\n        {user && (<Menu.Item>\r\n          <Button\r\n            inverted\r\n            color='green'\r\n            as={NavLink} to='/createAd'\r\n            positive\r\n            content='Create Ad'\r\n          />\r\n        </Menu.Item>)}\r\n        \r\n      {user && (\r\n          <Menu.Item position='right'>\r\n            {/* <image avatar spaced='right' src={user.image || '/assets/user.png'} /> */}\r\n            <Dropdown pointing='top left' text={user.username}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  as={Link}\r\n                  to={`/profiles/${user.username}`}\r\n                  text='My profile'\r\n                  icon='user'\r\n                />\r\n                <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )}\r\n    </Container>\r\n    </Menu>\r\n  );\r\n};\r\nexport default observer(NavBar);\r\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\ScrollToTop.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\Home\\HomePage.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\Dashboard.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdItem.tsx",["202"],"import React from 'react';\r\nimport { Item, Button, Segment, Icon, Label } from 'semantic-ui-react';\r\nimport {format} from 'date-fns';\r\nimport { IAdvert } from '../../app/models/advertsFixCar/adverts';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst AdItem: React.FC<{ ad: IAdvert}> = ({ ad }) => {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>          \r\n            <Item.Content>\r\n            <Item.Header as={Link} to={`/adverts/${ad.id}`}>\r\n                {ad.title}\r\n              </Item.Header>\r\n              <Item.Meta >\r\n              <Icon name='car' /> {ad?.carModel}\r\n                </Item.Meta>\r\n              \r\n              {/* <Item.Description>{ad?.description}</Item.Description> */}\r\n              <Button\r\n          as={Link}\r\n          to={`/adverts/${ad.id}`}\r\n          floated='left'\r\n          content='More details'\r\n          color='blue'\r\n        />\r\n            </Item.Content>\r\n            <Item.Image size='small'  src='/assets/car.jpg' />\r\n          </Item>\r\n        </Item.Group>\r\n        \r\n      </Segment>\r\n      \r\n      <Segment >    \r\n        <Icon name='user' />{\" \"}{ad?.advertiserUsername}{\" | \"} \r\n        <Icon name='marker' /> {\" \"} {ad?.city}{\" | \"} \r\n        <Icon name='time' />{\" \"} {format(ad.date, 'MMMM do, yyyy')}{\" \"}\r\n        </Segment>\r\n        </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default AdItem;\r\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\adStore.ts",["203"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdList.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\Loadding.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\api\\agent.ts",["204","205"],"import axios, { AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { IAdvert, IAdvertsEnvelope} from \"../models/advertsFixCar/adverts\";\r\nimport { IUser, IUserFormValues } from \"../models/users/user\";\r\nimport { IProfile, IUserAdvert } from \"../models/profiles/profile\";\r\nlet history = createBrowserHistory();\r\n\r\naxios.defaults.baseURL = \"http://localhost:5000/api\";\r\n\r\naxios.interceptors.request.use(\r\n  config => {\r\n    const token = window.localStorage.getItem('jwt');\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(undefined, error => {\r\n  if (error.message === 'Network Error' && !error.response) {\r\n    toast.error('Network error - make sure API is running!');\r\n  }\r\n  const { status, data, config, headers } = error.response;\r\n  if (status === 404) {\r\n    history.push('/notfound');\r\n  }\r\n  if (status === 401 && headers['www-authenticate'] === 'Bearer error=\"invalid_token\", error_description=\"The token is expired\"') {\r\n    window.localStorage.removeItem('jwt');\r\n    history.push('/')\r\n    toast.info('Your session has expired, please login again')\r\n  }\r\n  if (\r\n    status === 400 &&\r\n    config.method === 'get' &&\r\n    data.errors.hasOwnProperty('id')\r\n  ) {\r\n    history.push('/notfound');\r\n  }\r\n  if (status === 500) {\r\n    toast.error('Server error - check the terminal for more info!');\r\n  }\r\n  throw error.response;\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst requests = {\r\n  get: (url: string) =>\r\n    axios\r\n      .get(url)\r\n      .then(responseBody),\r\n  post: (url: string, body: {}) =>\r\n    axios\r\n      .post(url, body)\r\n      .then(responseBody),\r\n  put: (url: string, body: {}) =>\r\n    axios\r\n      .put(url, body)\r\n      .then(responseBody),\r\n  del: (url: string) =>\r\n    axios\r\n      .delete(url)\r\n      .then(responseBody),\r\n  postForm: (url: string, file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append('File', file);\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { 'Content-type': 'multipart/form-data' }\r\n      })\r\n      .then(responseBody);\r\n  }\r\n};\r\n\r\nconst Adverts = {\r\n  list: (): Promise<IAdvertsEnvelope> => requests.get('/adverts'),\r\n  details: (id: string) => requests.get(`/adverts/${id}`),\r\n  create: (advert: IAdvert) => requests.post(\"/adverts\", advert),\r\n  update: (advert: IAdvert) => requests.put(`/adverts/${advert.id}`, advert),\r\n  delete: (id: string) => requests.del(`/adverts/${id}`)\r\n};\r\n\r\nconst User = {\r\n  current: (): Promise<IUser> => requests.get(\"/user\"),\r\n  login: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(`/user/login`, user),\r\n  register: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(`/user/register`, user)\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string): Promise<IProfile> =>\r\n    requests.get(`/profiles/${username}`),\r\n  updateProfile: (profile: Partial<IProfile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  create: (profile: Partial<IProfile>) =>\r\n    requests.post(`/profiles`, profile),\r\n  listAdverts: (username: string,predicate:string) =>\r\n    requests.get(`/profiles/${username}/adverts?predicate=${predicate}`)\r\n  // uploadPhoto: (photo: Blob): Promise<IPhoto> =>\r\n  //   requests.postForm(`/photos`, photo),\r\n    // deletePhoto: (id: string) => requests.del(`/photos/${id}`) \r\n};\r\n\r\n\r\nexport default {\r\n  Adverts,\r\n  User,\r\n  Profiles\r\n};\r\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdForm.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\NotFound.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\models\\advertsFixCar\\adverts.ts",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\garages\\GarageDisplay.tsx",["206","207","208"],"import React from \"react\";\r\nimport { Grid, Segment, Image, Container, List } from \"semantic-ui-react\";\r\nimport { IGarage } from \"../../app/models/vehicles/garage\";\r\nimport GarageList from \"./GarageList\";\r\n\r\n\r\ninterface IProps {\r\n  garages: IGarage[];\r\n}\r\nconst GarageDisplay: React.FC<IProps> = ({garages}) => {\r\n  return (\r\n    <Container>\r\n      <Grid stackable>\r\n        <Grid.Column>\r\n          <GarageList garages={garages}/>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\nexport default GarageDisplay;\r\n",["209","210"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\garages\\GarageList.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\util\\util.ts",["211"],"import { IAdvert, IAdvertiser } from \"../../models/advertsFixCar/adverts\";\r\nimport { IUser } from \"../../models/users/user\";\r\n\r\nexport const combineDateAndTime = (date: Date,time:Date) => {\r\n    // const timeString = time.getHours() + ':' + time.getMinutes() + ':00';\r\n\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    const dateString = `${year}-${month}-${day}`;\r\n\r\n    // const dateString = date.toISOString().split('T')[0];\r\n    // const timeString = time.toISOString().split('T')[1];\r\n\r\n    return new Date(dateString );\r\n}\r\nexport const setAdProps = (advert: IAdvert, user: IUser) => {\r\n    advert.date = new Date(advert.date);\r\n    return advert;\r\n}\r\n\r\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\DateInput.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\TextInput.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\TextAreaInput.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\rootStore.ts",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\commonStore.ts",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\userStore.ts",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\modalStore.ts",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\user\\LoginForm.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\form\\ErrorMessage.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\user\\RegisterForm.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\Common\\modals\\ModalContainer.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\layout\\PrivateRoute.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\app\\stores\\profileStore.ts",["212","213"],"import { RootStore } from './rootStore';\r\nimport { observable, action, runInAction, computed, reaction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { toast } from 'react-toastify';\r\nimport { IPhoto, IProfile, IUserAdvert } from '../models/profiles/profile';\r\n\r\nexport default class ProfileStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable profile: IProfile | null = null;\r\n  @observable loadingProfile = true;\r\n  @observable uploadingPhoto = false;\r\n  @observable loading = false;\r\n  @observable activeTab: number = 0;\r\n  @observable userAdverts: IUserAdvert[] = [];\r\n  @observable loadingAdverts = false;\r\n\r\n  @computed get isCurrentUser() {\r\n    if (this.rootStore.userStore.user && this.profile) {\r\n      return this.rootStore.userStore.user.username === this.profile.username;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  @action loadUserAdverts = async (username: string, predicate?: string) => {\r\n    this.loadingAdverts = true;\r\n    try {\r\n      const adverts = await agent.Profiles.listAdverts(username,predicate!);\r\n      runInAction(() => {\r\n        this.userAdverts = adverts;\r\n        this.loadingAdverts = false;\r\n      })\r\n    } catch (error) {\r\n      toast.error('Problem loading adverts')\r\n      runInAction(() => {\r\n        this.loadingAdverts = false;\r\n      })\r\n    }\r\n  }\r\n  @action setActiveTab = (activeIndex: number) => {\r\n      this.activeTab = activeIndex;\r\n  } \r\n\r\n  @action loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n  @action create = async (profile: Partial<IProfile>) => {\r\n    try {\r\n      await agent.Profiles.create(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.username !== this.rootStore.userStore.user!.username\r\n        ) {\r\n          this.rootStore.userStore.user!.username = profile.username!;\r\n        }\r\n        this.profile = { ...this.profile!, ...profile };\r\n      });\r\n    } catch (error) {\r\n      toast.error('Problem creating profile');\r\n    }\r\n  };\r\n\r\n  @action updateProfile = async (profile: Partial<IProfile>) => {\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.username !== this.rootStore.userStore.user!.username\r\n        ) {\r\n          this.rootStore.userStore.user!.username = profile.username!;\r\n        }\r\n        this.profile = { ...this.profile!, ...profile };\r\n      });\r\n    } catch (error) {\r\n      toast.error('Problem updating profile');\r\n    }\r\n  };\r\n};","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfilePage.tsx",["214"],"import React, { useContext, useEffect } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport LoadingComponent from '../../app/layout/Loadding';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport ProfileHead from './ProfileHead';\r\n\r\n\r\ninterface RouteParams {\r\n  username: string;\r\n}\r\n\r\ninterface IProps extends RouteComponentProps<RouteParams> {}\r\n\r\nconst ProfilePage: React.FC<IProps> = ({ match }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadingProfile,\r\n    profile,\r\n    loadProfile,\r\n    isCurrentUser,\r\n    loading,\r\n    setActiveTab\r\n  } = rootStore.profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(match.params.username);\r\n  }, [loadProfile, match]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content='Loading profile...' />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        <ProfileHead\r\n          profile={profile!}\r\n          isCurrentUser={isCurrentUser}\r\n          loading={loading}\r\n        />\r\n        <ProfileContent setActiveTab={setActiveTab} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePage);","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileDescription.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileEditForm.tsx",["215"],"import React from 'react';\r\nimport { Form as FinalForm, Field } from 'react-final-form';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { combineValidators, isRequired } from 'revalidate';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport TextInput from '../../app/Common/form/TextInput';\r\nimport TextAreaInput from '../../app/Common/form/TextAreaInput';\r\nimport { IProfile } from '../../app/models/profiles/profile';\r\n\r\n\r\nconst validate = combineValidators({\r\n  //username: isRequired('username')\r\n});\r\n\r\ninterface IProps {\r\n  updateProfile: (profile: Partial<IProfile>) => void;\r\n  profile: IProfile;\r\n}\r\n\r\nconst ProfileEditForm: React.FC<IProps> = ({ updateProfile, profile }) => {\r\n  return (\r\n    <FinalForm\r\n      onSubmit={updateProfile}\r\n      validate={validate}\r\n      initialValues={profile!}\r\n      render={({ handleSubmit, invalid, pristine, submitting }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Field\r\n            name='firstName'\r\n            component={TextInput}\r\n            placeholder='First Name'\r\n            value={profile!.firstName}\r\n          />\r\n          <Field\r\n            name='lastName'\r\n            component={TextInput}\r\n            placeholder='Second Name'\r\n            value={profile!.lastName}\r\n          />\r\n          <Field\r\n            name='street'\r\n            component={TextAreaInput}\r\n            rows={3}\r\n            placeholder='Street'\r\n            value={profile!.street}\r\n          />\r\n          <Field\r\n            name='city'\r\n            component={TextInput}\r\n            placeholder='City'\r\n            value={profile!.city}\r\n          />\r\n          <Field\r\n            name='county'\r\n            component={TextInput}\r\n            placeholder='County'\r\n            value={profile!.county}\r\n          />\r\n          <Field\r\n            name='profileDescription'\r\n            component={TextInput}\r\n            placeholder='Description'\r\n            value={profile!.profileDescription}\r\n          />\r\n          <Button \r\n            loading={submitting}\r\n            floated='right'\r\n            disabled={invalid || pristine}\r\n            positive\r\n            content='Update profile'\r\n          />\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(ProfileEditForm);\r\n","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileHead.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileContent.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdItemPlaceholder.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\Details.tsx",["216"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdDetailedHeader.tsx",["217"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdDetailedInfo.tsx",[],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileAdverts.tsx",["218","219"],"import React, { useEffect, useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps, Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport { IUserAdvert } from '../../app/models/profiles/profile';\r\n\r\nconst panes = [\r\n  { menuItem: 'Active', pane: { key: 'active' } },\r\n  { menuItem: 'Expired', pane: { key: 'expired' } },\r\n  { menuItem: 'Created', pane: { key: 'created' } }\r\n];\r\n\r\nconst ProfileEvents = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadUserAdverts,\r\n    profile,\r\n    loadingAdverts,\r\n    userAdverts\r\n  } = rootStore.profileStore!;\r\n\r\n  useEffect(() => {\r\n    loadUserAdverts(profile!.username);\r\n  }, [loadUserAdverts, profile]);\r\n\r\n  const handleTabChange = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    data: TabProps\r\n  ) => {\r\n    let predicate;\r\n    switch (data.activeIndex) {\r\n      case 1:\r\n        predicate = 'expired';\r\n        break;\r\n      case 2:\r\n        predicate = 'created';\r\n        break;\r\n      default:\r\n        predicate = 'active';\r\n        break;\r\n    }\r\n    loadUserAdverts(profile!.username, predicate);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingAdverts}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated='left' icon='calendar' content={'Adverts'} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          \r\n          <Card.Group itemsPerRow={4}>\r\n            {userAdverts.map((advert: IUserAdvert) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/adverts/${advert.id}`}\r\n                key={advert.id}\r\n              >\r\n               \r\n                <Card.Content>\r\n                  <Card.Header textAlign='center'>{advert.title}</Card.Header>\r\n                  <Card.Meta textAlign='center'>\r\n                    <div>{format(new Date(advert.date), 'do LLL')}</div>\r\n                    <div>{format(new Date(advert.date), 'h:mm a')}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileEvents);","C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\profiles\\ProfileHeader.tsx",[],["220","221"],"C:\\Users\\A_Les\\OneDrive\\Desktop\\Project400\\FixCarMan Application\\fixcarman-client\\src\\features\\adverts\\AdFilters.tsx",["222"],"import React, { Fragment, useContext } from 'react';\r\nimport { Menu, Header } from 'semantic-ui-react';\r\nimport { Calendar } from 'react-widgets';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\nconst AdvertFilters = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { predicate, setPredicate } = rootStore.adStore;\r\n  return (\r\n    <Fragment>\r\n      <Menu vertical size={'large'} style={{ width: '100%', marginTop: 50 }}>\r\n        <Header icon={'filter'} attached color={'blue'} content={'Filters'} />\r\n        <Menu.Item\r\n          active={predicate.size === 0}\r\n          onClick={() => setPredicate('all', 'true')}\r\n          color={'blue'}\r\n          name={'all'}\r\n          content={'All Adverts'}\r\n        />\r\n  \r\n        <Menu.Item\r\n          active={predicate.has('isAdvertCreator')}\r\n          onClick={() => setPredicate('IsAdvertCreator', 'true')}\r\n          color={'blue'}\r\n          name={'advertiser'}\r\n          content={\"My adverts\"}\r\n        />\r\n      </Menu>\r\n      {/* <Header\r\n        icon={'calendar'}\r\n        attached\r\n        color={'blue'}\r\n        content={'Select Date'}\r\n      /> */}\r\n      {/* <Calendar\r\n        onChange={date => setPredicate('startDate', date!)}\r\n        value={predicate.get('startDate') || new Date()}\r\n      /> */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(AdvertFilters);\r\n",["223","224"],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"225","replacedBy":"229"},{"ruleId":"227","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":1,"column":50,"nodeType":"233","messageId":"234","endLine":1,"endColumn":58},{"ruleId":"231","severity":1,"message":"235","line":4,"column":39,"nodeType":"233","messageId":"234","endLine":4,"endColumn":45},{"ruleId":"231","severity":1,"message":"236","line":4,"column":53,"nodeType":"233","messageId":"234","endLine":4,"endColumn":61},{"ruleId":"231","severity":1,"message":"237","line":4,"column":63,"nodeType":"233","messageId":"234","endLine":4,"endColumn":70},{"ruleId":"231","severity":1,"message":"238","line":2,"column":39,"nodeType":"233","messageId":"234","endLine":2,"endColumn":44},{"ruleId":null,"fatal":true,"severity":2,"message":"239","line":164,"column":28},{"ruleId":"231","severity":1,"message":"240","line":6,"column":20,"nodeType":"233","messageId":"234","endLine":6,"endColumn":31},{"ruleId":"241","severity":1,"message":"242","line":109,"column":1,"nodeType":"243","endLine":113,"endColumn":3},{"ruleId":"231","severity":1,"message":"237","line":2,"column":16,"nodeType":"233","messageId":"234","endLine":2,"endColumn":23},{"ruleId":"231","severity":1,"message":"244","line":2,"column":25,"nodeType":"233","messageId":"234","endLine":2,"endColumn":30},{"ruleId":"231","severity":1,"message":"245","line":2,"column":43,"nodeType":"233","messageId":"234","endLine":2,"endColumn":47},{"ruleId":"225","replacedBy":"246"},{"ruleId":"227","replacedBy":"247"},{"ruleId":"231","severity":1,"message":"248","line":1,"column":19,"nodeType":"233","messageId":"234","endLine":1,"endColumn":30},{"ruleId":"231","severity":1,"message":"249","line":2,"column":53,"nodeType":"233","messageId":"234","endLine":2,"endColumn":61},{"ruleId":"231","severity":1,"message":"250","line":5,"column":10,"nodeType":"233","messageId":"234","endLine":5,"endColumn":16},{"ruleId":"231","severity":1,"message":"251","line":8,"column":8,"nodeType":"233","messageId":"234","endLine":8,"endColumn":21},{"ruleId":"231","severity":1,"message":"252","line":4,"column":29,"nodeType":"233","messageId":"234","endLine":4,"endColumn":39},{"ruleId":"231","severity":1,"message":"253","line":7,"column":8,"nodeType":"233","messageId":"234","endLine":7,"endColumn":22},{"ruleId":"231","severity":1,"message":"244","line":2,"column":41,"nodeType":"233","messageId":"234","endLine":2,"endColumn":46},{"ruleId":"231","severity":1,"message":"244","line":3,"column":35,"nodeType":"233","messageId":"234","endLine":3,"endColumn":40},{"ruleId":"231","severity":1,"message":"254","line":3,"column":52,"nodeType":"233","messageId":"234","endLine":3,"endColumn":58},{"ruleId":"225","replacedBy":"255"},{"ruleId":"227","replacedBy":"256"},{"ruleId":"231","severity":1,"message":"257","line":3,"column":10,"nodeType":"233","messageId":"234","endLine":3,"endColumn":18},{"ruleId":"225","replacedBy":"258"},{"ruleId":"227","replacedBy":"259"},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],["260"],["261"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'MenuItem' is defined but never used.","'Segment' is defined but never used.","'Label' is defined but never used.","Parsing error: Expression expected.","'IUserAdvert' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Image' is defined but never used.","'List' is defined but never used.",["260"],["261"],"'IAdvertiser' is defined but never used.","'reaction' is defined but never used.","'IPhoto' is defined but never used.","'ProfileHeader' is defined but never used.","'isRequired' is defined but never used.","'AdDetailedInfo' is defined but never used.","'Button' is defined but never used.",["260"],["261"],"'Calendar' is defined but never used.",["260"],["261"],"no-global-assign","no-unsafe-negation"]